{"ast":null,"code":"var _jsxFileName = \"/Users/ieric/CIS350_final_project/web_app/src/components/exercise_track.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-vis/dist/style.css';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries } from 'react-vis';\n\nconst Exercise = props => React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, props.exercise.hours), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, props.exercise.date));\n\nconst MSEC_DAILY = 86400000;\nvar exercises = [];\nexport default class ExerciseTrack extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      test: [{\n        x: 1,\n        y: 2\n      }, {\n        x: 2,\n        y: 4\n      }],\n      hours: 0,\n      date: new Date()\n    };\n    this.onChangeHours = this.onChangeHours.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.exerciseList = this.exerciseList.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/exercise_track/').then(response => {\n      data = response.data;\n\n      for (var i = 0; i < data.length; i++) {\n        var exercise = data[i];\n        exercise.x = new Date().getTime() + MSEC_DAILY;\n        exercise.y = exercise.hours;\n        delete exercise.date;\n        delete exercise.hours;\n        delete exercise._id;\n        delete exercise.createdAt;\n        delete exercise.updatedAt;\n        delete exercise.__v;\n        delete exercise.__proto__;\n        arr.push(exercise);\n      }\n\n      console.log(exercises);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  exerciseList() {\n    return exercises.map(currentexercise => {\n      return React.createElement(Exercise, {\n        exercise: currentexercise,\n        key: currentexercise._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    });\n  }\n\n  onChangeHours(e) {\n    this.setState({\n      hours: e.target.value\n    });\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const exercise = {\n      hours: this.state.hours,\n      date: this.state.date\n    };\n    console.log(exercise);\n    axios.post('http://localhost:5000/exercise_track/add', exercise).then(res => console.log(res.data));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Create New Exercise Log\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Hours: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.hours,\n      onChange: this.onChangeHours,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Date: \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      selected: this.state.date,\n      onChange: this.onChangeDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Create Exercise Log\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))), React.createElement(XYPlot, {\n      xType: \"time\",\n      height: 300,\n      width: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(HorizontalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(LineSeries, {\n      data: exercises,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      title: \"Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      title: \"Hours Exercised\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })));\n  }\n\n} // <table className=\"table\">\n//   <thead className=\"thead-light\">\n//     <tr>\n//       <th>Hours</th>\n//       <th>Date</th>\n//     </tr>\n//   </thead>\n//   <tbody>\n//     { this.exerciseList() }\n//   </tbody>\n// </table>","map":{"version":3,"sources":["/Users/ieric/CIS350_final_project/web_app/src/components/exercise_track.component.js"],"names":["React","Component","axios","DatePicker","XYPlot","XAxis","YAxis","HorizontalGridLines","LineSeries","Exercise","props","exercise","hours","date","MSEC_DAILY","exercises","ExerciseTrack","constructor","state","test","x","y","Date","onChangeHours","bind","onChangeDate","onSubmit","exerciseList","componentDidMount","get","then","response","data","i","length","getTime","_id","createdAt","updatedAt","__v","__proto__","arr","push","console","log","catch","error","map","currentexercise","e","setState","target","value","preventDefault","post","res","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-vis/dist/style.css';\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries} from 'react-vis';\n\nconst Exercise = props => (\n  <tr>\n    <td>{props.exercise.hours}</td>\n    <td>{props.exercise.date}</td>\n  </tr>\n)\n\nconst MSEC_DAILY = 86400000;\n\nvar exercises = []\n\nexport default class ExerciseTrack extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      test: [{x:1, y:2}, {x:2, y:4}],\n      hours: 0,\n      date: new Date()\n    }\n\n    this.onChangeHours = this.onChangeHours.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.exerciseList = this.exerciseList.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/exercise_track/')\n     .then(response => {\n        data = response.data\n        for (var i = 0; i < data.length; i++){\n          var exercise = data[i]\n          exercise.x = new Date().getTime() + MSEC_DAILY\n          exercise.y = exercise.hours\n          delete exercise.date\n          delete exercise.hours\n          delete exercise._id\n          delete exercise.createdAt\n          delete exercise.updatedAt\n          delete exercise.__v\n          delete exercise.__proto__\n          arr.push(exercise)\n\n        }\n        console.log(exercises);\n\n      })\n     .catch((error) => {\n        console.log(error);\n     })\n  }\n\n  exerciseList() {\n    return exercises.map(currentexercise => {\n      return <Exercise exercise={currentexercise} key={currentexercise._id}/>;\n    })\n  }\n\n  onChangeHours(e) {\n    this.setState({\n      hours: e.target.value\n    });\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const exercise = {\n      hours: this.state.hours,\n      date: this.state.date,\n    };\n    console.log(exercise);\n    axios.post('http://localhost:5000/exercise_track/add', exercise).then(res => console.log(res.data));\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Create New Exercise Log</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Hours: </label>\n            <input\n                type=\"text\"\n                className=\"form-control\"\n                value={this.state.hours}\n                onChange={this.onChangeHours}\n                />\n          </div>\n          <div className=\"form-group\">\n            <label>Date: </label>\n            <div>\n              <DatePicker\n                selected={this.state.date}\n                onChange={this.onChangeDate}\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <input type=\"submit\" value=\"Create Exercise Log\" className=\"btn btn-primary\" />\n          </div>\n        </form>\n        <XYPlot xType=\"time\" height={300} width= {300}>\n          <HorizontalGridLines />\n          <LineSeries data={exercises} />\n          <XAxis title=\"Date\" />\n          <YAxis title=\"Hours Exercised\"/>\n        </XYPlot>\n      </div>\n    )\n  }\n}\n\n// <table className=\"table\">\n//   <thead className=\"thead-light\">\n//     <tr>\n//       <th>Hours</th>\n//       <th>Date</th>\n//     </tr>\n//   </thead>\n//   <tbody>\n//     { this.exerciseList() }\n//   </tbody>\n// </table>\n"]},"metadata":{},"sourceType":"module"}